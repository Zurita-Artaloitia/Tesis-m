#!/bin/bash
#Este script se debe correr dentro de un while read loop. La entrada tiene que ser una lista de GCAs.




#Esto evitara que los comandos internos del script reinicien el STDIN del loop.
exec </dev/null

# Define el archivo temporal intermediario y el nombre de la secuencia para el output
tmp_file="${1}.tmp"
secuencia="${1}"

# eliminar el la versión del GCA para que se extraigan todas las versiones
base_assembly_id=$(echo "$1" | cut -d'.' -f1)

# Obtener todas las versiones de los assemblies
if ! esearch -db assembly -query "$base_assembly_id" | esummary | grep 'AssemblyAccession' > "${tmp_file}"; then
    echo "No se pudo encontrar el assembly de: $base_assembly_id"
    exit 1
fi

# Ordenar por versión
latest_assembly_id=$(grep 'AssemblyAccession' "${tmp_file}" | awk -F '[><]' '{print $3}' | sort -t '.' -k2,2nr | head -n1)



# Obtener los detalles del ensamblado
if ! esummary -db assembly -id "$latest_assembly_id" > "$tmp_file"; then
    echo "No se encontraron los datos de ensamnlado de: $latest_assembly_id"
    exit 1
fi

# Obtener el número de acceso de Genbank
assemblyid=$(grep 'Genbank>' "$tmp_file" | awk -F '[><]' '{print $3}')


# Obtener el taxonomy ID de cada GCA
taxid=$(grep '<Taxid>' "$tmp_file" | sed 's/[^0-9]*//g')

# Obtener con efetch la taxonomía de el ID en formato xml y parsear para obtener la clase
classname=$(efetch -db taxonomy -id "$taxid" -format xml | \
    grep -B1 '<Rank>class</Rank>' | \
    awk 'NR != 2' | awk -F '[><]' '{print $3}')


# Imprimir la información al archivo de salida
printf "%s\t%s\n" "$assemblyid" "$classname" >> outfile_taxids_class.txt

# Ir actualizando las secuencias procesadas
echo "Secuencia $secuencia procesada"

# Borrar el archivo temporal
rm "$tmp_file"
